(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(537),d=n.n(a),r=n(645),o=n.n(r)()(d());o.push([e.id,'body {\n    margin: 0;\n}\n\n#content {\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    height: 100vh;\n    border: solid 2px black;\n}\n\n.header {\n    grid-area: 1/1/2/3;\n    border: solid 1px red;\n    text-align: center;\n    padding-top: 40px;\n}\n\n.display-body {\n    grid-area: 2/2/3/3;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px blue;\n}\n\n.sidebar {\n    grid-area: 2/1/3/2;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px green;\n}\n\n.project-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.project-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.project-form input[type="text"],\n.project-form textarea,\n.project-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.project-form button {\n    color: red;\n    margin: 10px;\n}\n\n.task-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.task-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.task-form input[type="text"],\n.task-form textarea,\n.task-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.task-form button {\n    color: red;\n    margin: 10px;\n}\n\n.project-card {\n    border: solid 1px red;\n}\n\n.task-card {\n    border: solid 1px blue;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,UAAU;IACV,uBAAuB;IACvB,aAAa;;IAEb,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;IAChB,uCAAuC;AAC3C;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;;IAGI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,UAAU;IACV,uBAAuB;IACvB,aAAa;;IAEb,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;IAChB,uCAAuC;AAC3C;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;;IAGI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;AAC1B",sourcesContent:['body {\n    margin: 0;\n}\n\n#content {\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    height: 100vh;\n    border: solid 2px black;\n}\n\n.header {\n    grid-area: 1/1/2/3;\n    border: solid 1px red;\n    text-align: center;\n    padding-top: 40px;\n}\n\n.display-body {\n    grid-area: 2/2/3/3;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px blue;\n}\n\n.sidebar {\n    grid-area: 2/1/3/2;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px green;\n}\n\n.project-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.project-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.project-form input[type="text"],\n.project-form textarea,\n.project-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.project-form button {\n    color: red;\n    margin: 10px;\n}\n\n.task-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.task-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.task-form input[type="text"],\n.task-form textarea,\n.task-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.task-form button {\n    color: red;\n    margin: 10px;\n}\n\n.project-card {\n    border: solid 1px red;\n}\n\n.task-card {\n    border: solid 1px blue;\n}'],sourceRoot:""}]);const i=o},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,d,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(a)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(o[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);a&&o[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),d&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=d):s[4]="".concat(d)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(d," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},o=[],i=0;i<e.length;i++){var c=e[i],l=a.base?c[0]+a.base:c[0],s=r[l]||0,p="".concat(l," ").concat(s);r[l]=s+1;var u=n(p),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var m=d(A,a);a.byIndex=i,t.splice(i,0,{identifier:p,updater:m,references:1})}o.push(p)}return o}function d(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,d){var r=a(e=e||[],d=d||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var i=n(r[o]);t[i].references--}for(var c=a(e,d),l=0;l<r.length;l++){var s=n(r[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}r=c}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var d=void 0!==n.layer;d&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,d&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(a){var d=t[a];if(void 0!==d)return d.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var a={};(()=>{n.d(a,{Z:()=>Q});var e=n(379),t=n.n(e),d=n(795),r=n.n(d),o=n(569),i=n.n(o),c=n(565),l=n.n(c),s=n(216),p=n.n(s),u=n(589),A=n.n(u),m=n(426),f={};f.styleTagTransform=A(),f.setAttributes=l(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=p(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;let C=document.getElementById("content"),h=document.getElementById("content");let b=document.createElement("div");b.classList.add("task-container");let k=document.createElement("div");k.classList.add("project-header"),k.innerHTML="Select Project:";let x=document.createElement("button");function y(){x.disabled=!1;let e=document.querySelector(".task-form");e&&e.remove()}function g(){for(;b.hasChildNodes();)b.removeChild(b.firstChild)}function I(e){let t=document.querySelector(".task-container");B.filter((t=>t.projectId===parseInt(e))).forEach((e=>{let n=document.createElement("div"),a=document.createElement("div"),d=document.createElement("div"),r=document.createElement("div"),o=document.createElement("button"),i=document.createElement("button");n.classList.add("task-card"),a.classList.add("task-title"),d.classList.add("task-due-date"),r.classList.add("task-priority"),o.classList.add("task-edit-button"),i.classList.add("task-delete-button"),n.dataset.taskId=e.id,o.addEventListener("click",(()=>{E||T(n.dataset.taskId,o)})),i.addEventListener("click",(()=>{S(e.id)})),a.innerHTML=`Task: ${e.title}`,d.innerHTML=`Due Date: ${e.dueDate}`,r.innerHTML=`Priority: ${e.priority}`,o.innerHTML="EDIT",i.innerHTML="X",t.appendChild(n),n.appendChild(a),n.appendChild(d),n.appendChild(r),n.appendChild(o),n.appendChild(i)}))}function v(e){let t=e.innerHTML;k.innerHTML=`Project ${t}`}x.classList.add("add-task-button"),x.innerHTML="Add New Task",x.onclick=function(){x.disabled=!0;let e=function(){let e=document.createElement("div");e.classList.add("task-form");let t=document.createElement("label");t.textContent="Task:",t.setAttribute("for","task-title");let n=document.createElement("input");n.type="text",n.id="task-title",n.name="task-title";let a=document.createElement("label");a.textContent="Due Date:",a.setAttribute("for","task-due-date");let d=document.createElement("input");d.type="date",d.id="task-due-date",d.name="task-due-date";let r=document.createElement("label");r.textContent="Priority:",r.setAttribute("for","task-priority");let o=document.createElement("select");o.id="task-priority",o.name="task-priority",["High","Medium","Low"].forEach((e=>{let t=document.createElement("option");t.value=e,t.textContent=e,o.appendChild(t)}));let i=document.createElement("label");i.textContent="Project:",i.setAttribute("for","task-project");let c=document.createElement("select");c.id="task-project",c.name="task-project",q.forEach((e=>{let t=document.createElement("option");t.value=e.id,t.textContent=e.projectTitle,c.appendChild(t)}));let l=document.createElement("button");l.textContent="Add Task",l.addEventListener("click",(function(){!function(e){let t=Math.max(...B.map((e=>e.id)),0)+1,n=document.querySelector("#task-title").value,a=document.querySelector("#task-due-date").value,d=document.querySelector("#task-priority").value,r=document.getElementById("task-project"),o=r.options[r.selectedIndex],i=new j(t,e=parseInt(e),n,a,d);""!==n.trim()?(B.push(i),g(),y(),I(e),v(o),M()):y()}(document.getElementById("task-project").value)})),e.addEventListener("keydown",(e=>{"Enter"===e.key&&l.click()}));let s=document.createElement("button");return s.textContent="Cancel",s.onclick=y,document.addEventListener("keydown",(e=>{"Escape"===e.key&&s.click()})),e.appendChild(t),e.appendChild(n),e.appendChild(a),e.appendChild(d),e.appendChild(r),e.appendChild(o),e.appendChild(i),e.appendChild(c),e.appendChild(l),e.appendChild(s),e}();Q.appendChild(e),e.style.display="block"};let B=[],E=!1;function L(e){let t=document.querySelector(".task-container"),n=B.filter((t=>t.projectId===parseInt(e)));for(;t.firstChild;)t.removeChild(t.firstChild);n.forEach((e=>{let n=document.createElement("div"),a=document.createElement("div"),d=document.createElement("div"),r=document.createElement("div"),o=document.createElement("button"),i=document.createElement("button");n.classList.add("task-card"),a.classList.add("task-title"),d.classList.add("task-due-date"),r.classList.add("task-priority"),o.classList.add("task-edit-button"),i.classList.add("task-delete-button"),a.innerHTML=`Task: ${e.title}`,d.innerHTML=`Due Date: ${e.dueDate}`,r.innerHTML=`Priority: ${e.priority}`,o.innerHTML="EDIT",i.innerHTML="X",n.dataset.taskId=e.id,o.addEventListener("click",(()=>{E||T(n.dataset.taskId,o)})),i.addEventListener("click",(()=>{S(e.id)})),t.appendChild(n),n.appendChild(a),n.appendChild(d),n.appendChild(r),n.appendChild(o),n.appendChild(i)}))}function j(e,t,n,a,d){this.id=e,this.projectId=t,this.title=n,this.dueDate=a,this.priority=d}function T(e,t){E=!0,function(e){e.disabled=!0}(t);let n=function(e,t){let n=B.findIndex((t=>t.id===parseInt(e))),a=document.createElement("div");a.classList.add("edit-task-form");let d=document.createElement("label");d.textContent="Task:",d.setAttribute("for","edit-task-title");let r=document.createElement("input");r.type="text",r.id="edit-task-title",r.name="edit-task-title",r.value=`${B[n].title}`;let o=document.createElement("label");o.textContent="Due Date:",o.setAttribute("for","edit-task-due-date");let i=document.createElement("input");i.type="date",i.id="edit-task-due-date",i.name="edit-task-due-date",i.value=`${B[n].dueDate}`;let c=document.createElement("label");c.textContent="Priority:",c.setAttribute("for","edit-task-priority");let l=document.createElement("select");l.id="edit-task-priority",l.name="edit-task-priority",["High","Medium","Low"].forEach((e=>{let t=document.createElement("option");t.value=e,t.textContent=e,l.appendChild(t)})),l.value=`${B[n].priority}`;let s=document.createElement("button");s.type="submit",s.textContent="Save Changes",s.addEventListener("click",(()=>{!function(e,t,n){E=!1;let a=B.findIndex((t=>t.id===parseInt(e)));-1!==a&&(B[a].title=document.querySelector("#edit-task-title").value,B[a].dueDate=document.querySelector("#edit-task-due-date").value,B[a].priority=document.querySelector("#edit-task-priority").value,g(),w(t),I(B[a].projectId),M())}(e,t,B[n])})),a.addEventListener("keydown",(e=>{"Enter"===e.key&&s.click()}));let p=document.createElement("button");return p.textContent="Cancel",p.addEventListener("click",(()=>{w(t)})),document.addEventListener("keydown",(e=>{"Escape"===e.key&&p.click()})),a.appendChild(d),a.appendChild(r),a.appendChild(o),a.appendChild(i),a.appendChild(c),a.appendChild(l),a.appendChild(s),a.appendChild(p),a}(e,t);Q.appendChild(n),n.style.display="block"}function w(e){E=!1,e.disabled=!1;let t=document.querySelector(".edit-task-form");t&&t.remove()}function S(e){B=B.filter((t=>t.id!==e)),function(e){let t=document.querySelector(".task-container"),n=t.querySelector(`[data-task-id="${e}"]`);n&&t.removeChild(n)}(e),M()}function M(){localStorage.setItem("myTasks",JSON.stringify(B))}let H=document.getElementById("content"),q=[],D=document.createElement("div");D.classList.add("projects");let P=document.createElement("button");function $(){P.disabled=!1;const e=document.querySelector(".project-form");e&&e.remove()}function N(e,t){this.id=e,this.projectTitle=t}function U(){let e=Math.max(...q.map((e=>e.id)),0)+1,t=document.querySelector("#project-title").value,n=new N(e,t);""!==t.trim()?(q.push(n),O(),z(),$(),Z()):$()}function z(){q.forEach((e=>{let t=document.createElement("div"),n=document.createElement("div"),a=document.createElement("button");n.dataset.projectId=e.id,t.classList.add("project-card"),n.classList.add("project-title"),a.classList.add(".delete-project-button"),n.innerHTML=e.projectTitle,a.innerHTML="X",D.appendChild(t),t.appendChild(n),t.appendChild(a),n.addEventListener("click",(()=>{L(n.dataset.projectId),v(n)})),a.addEventListener("click",(()=>{Y(e.id)}))}))}function O(){for(;D.hasChildNodes();)D.removeChild(D.firstChild)}function Y(e){let t=document.querySelector(".project-header").innerHTML,n=`Project ${document.querySelector(`[data-project-id="${e}"]`).innerHTML}`;B.filter((t=>t.projectId===e)).forEach((e=>{S(e.id)})),q=q.filter((t=>t.id!==e)),O(),z(),Z(),t===n&&(k.innerHTML="Select Project:")}function Z(){localStorage.setItem("myProjects",JSON.stringify(q))}P.classList.add("project-form-button"),P.textContent="Add Project",P.onclick=function(){P.disabled=!0;let e=function(){let e=document.createElement("div");e.classList.add("project-form");let t=document.createElement("label");t.textContent="Project Title:",t.setAttribute("for","project-title");let n=document.createElement("input");n.type="text",n.id="project-title",n.name="project-title";let a=document.createElement("button");a.textContent="Add Project",a.onclick=U,document.addEventListener("keydown",(e=>{"Enter"===e.key&&(e.preventDefault(),a.click())}));let d=document.createElement("button");return d.textContent="Cancel",d.onclick=$,document.addEventListener("keydown",(e=>{"Escape"===e.key&&(e.preventDefault(),d.click())})),e.appendChild(t),e.appendChild(n),e.appendChild(a),e.appendChild(d),e}();H.appendChild(e),e.style.display="block"},function(){const e=JSON.parse(localStorage.getItem("myProjects"));e&&(q=e)}(),function(){const e=JSON.parse(localStorage.getItem("myTasks"));e&&(B=e)}();let R=document.getElementById("content"),J=document.createElement("div");J.classList.add("display-body"),R.appendChild(J);const Q=J;!function(){let e=document.createElement("div");e.classList.add("header"),e.innerHTML="2Do2Day",C.appendChild(e)}(),function(){let e=function(){let e=document.createElement("div");return e.classList.add("sidebar"),e.innerHTML="Projects",h.appendChild(e),e}();for(e.appendChild(P),e.appendChild(D);D.firstChild;)D.removeChild(D.firstChild);q.forEach((e=>{let t=document.createElement("div"),n=document.createElement("div"),a=document.createElement("button");t.classList.add("project-card"),n.classList.add("project-title"),a.classList.add("delete-project-button"),n.innerHTML=e.projectTitle,a.innerHTML="X",n.dataset.projectId=e.id,D.appendChild(t),t.appendChild(n),t.appendChild(a),n.addEventListener("click",(()=>{L(n.dataset.projectId),v(n)})),a.addEventListener("click",(()=>{Y(e.id)}))}))}(),Q.appendChild(k),Q.appendChild(x),Q.appendChild(b)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,