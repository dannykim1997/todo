(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),a=n.n(r),o=n(645),d=n.n(o)()(a());d.push([e.id,'body {\n    margin: 0;\n}\n\n#content {\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    height: 100vh;\n    border: solid 2px black;\n}\n\n.header {\n    grid-area: 1/1/2/3;\n    border: solid 1px red;\n    text-align: center;\n    padding-top: 40px;\n}\n\n.display-body {\n    grid-area: 2/2/3/3;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px blue;\n}\n\n.sidebar {\n    grid-area: 2/1/3/2;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px green;\n}\n\n.project-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.project-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.project-form input[type="text"],\n.project-form textarea,\n.project-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.project-form button {\n    color: red;\n    margin: 10px;\n}\n\n.task-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.task-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.task-form input[type="text"],\n.task-form textarea,\n.task-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.task-form button {\n    color: red;\n    margin: 10px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;AACb;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,UAAU;IACV,uBAAuB;IACvB,aAAa;;IAEb,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;IAChB,uCAAuC;AAC3C;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;;IAGI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,UAAU;IACV,uBAAuB;IACvB,aAAa;;IAEb,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,gBAAgB;IAChB,uCAAuC;AAC3C;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;;;IAGI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB",sourcesContent:['body {\n    margin: 0;\n}\n\n#content {\n    display: grid;\n    grid-template-columns: 1fr 6fr;\n    grid-template-rows: 1fr 6fr;\n    height: 100vh;\n    border: solid 2px black;\n}\n\n.header {\n    grid-area: 1/1/2/3;\n    border: solid 1px red;\n    text-align: center;\n    padding-top: 40px;\n}\n\n.display-body {\n    grid-area: 2/2/3/3;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px blue;\n}\n\n.sidebar {\n    grid-area: 2/1/3/2;\n    text-align: center;\n    padding-top: 20px;\n    border: solid 1px green;\n}\n\n.project-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.project-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.project-form input[type="text"],\n.project-form textarea,\n.project-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.project-form button {\n    color: red;\n    margin: 10px;\n}\n\n.task-form {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n    background-color: white;\n    padding: 20px;\n\n    margin: 0 auto;\n    max-width: 400px;\n    padding: 20px;\n    border: 1px solid #ccc;\n    background-color: #f9f9f9;\n    text-align: left;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.task-form label {\n    display: block;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.task-form input[type="text"],\n.task-form textarea,\n.task-form select {\n    width: 350px;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    font-size: 16px;\n}\n\n.task-form button {\n    color: red;\n    margin: 10px;\n}'],sourceRoot:""}]);const i=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(d[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&d[s[0]]||(void 0!==o&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=o),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},d=[],i=0;i<e.length;i++){var c=e[i],l=r.base?c[0]+r.base:c[0],s=o[l]||0,p="".concat(l," ").concat(s);o[l]=s+1;var A=n(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)t[A].references++,t[A].updater(u);else{var m=a(u,r);r.byIndex=i,t.splice(i,0,{identifier:p,updater:m,references:1})}d.push(p)}return d}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var d=0;d<o.length;d++){var i=n(o[d]);t[i].references--}for(var c=r(e,a),l=0;l<o.length;l++){var s=n(o[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}o=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var r={};(()=>{n.d(r,{Z:()=>P});var e=n(379),t=n.n(e),a=n(795),o=n.n(a),d=n(569),i=n.n(d),c=n(565),l=n.n(c),s=n(216),p=n.n(s),A=n(589),u=n.n(A),m=n(426),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=p(),t()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;let C=document.getElementById("content"),h=document.getElementById("content");let b=document.createElement("div");b.classList.add("task-container");let x=document.createElement("button");function g(){x.disabled=!1;let e=document.querySelector(".task-form");e&&e.remove()}x.classList.add("add-task-button"),x.innerHTML="Add New Task",x.onclick=function(){x.disabled=!0;let e=function(){let e=document.createElement("div");e.classList.add("task-form");let t=document.createElement("label");t.textContent="Title:",t.setAttribute("for","task-title");let n=document.createElement("input");n.type="text",n.id="task-title",n.name="task-title";let r=document.createElement("label");r.textContent="Due Date:",r.setAttribute("for","task-due-date");let a=document.createElement("input");a.type="date",a.id="task-due-date",a.name="task-due-date";let o=document.createElement("label");o.textContent="Priority:",o.setAttribute("for","task-priority");let d=document.createElement("select");d.id="task-priority",d.name="task-priority",["High","Medium","Low"].forEach((e=>{let t=document.createElement("option");t.value=e,t.textContent=e,d.appendChild(t)}));let i=document.createElement("label");i.textContent="Project:",i.setAttribute("for","task-project");let c=document.createElement("select");c.id="task-project",c.name="task-project",L.forEach((e=>{let t=document.createElement("option");t.value=e.id,t.textContent=e.projectTitle,c.appendChild(t)}));let l=document.createElement("button");l.textContent="Add Project",l.addEventListener("click",(function(){!function(e){let t=Math.max(...k.map((e=>e.id)),0)+1,n=document.querySelector("#task-title").value,r=document.querySelector("#task-due-date").value,a=document.querySelector("#task-priority").value,o=new v(t,e=parseInt(e),n,r,a);""!==n.trim()?(k.push(o),function(){for(;b.hasChildNodes();)b.removeChild(b.firstChild)}(),g(),function(e){let t=document.querySelector(".task-container");k.filter((t=>t.projectId===parseInt(e))).forEach((e=>{let n=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),d=document.createElement("div");n.classList.add("task-card"),r.classList.add("task-title"),a.classList.add("task-due-date"),o.classList.add("task-priority"),d.classList.add("task-delete-button"),e.id=B++,n.dataset.taskId=e.id,d.addEventListener("click",(()=>{console.log(`click ${e.id}`),y(e.id)})),r.innerHTML=`Task: ${e.title}`,a.innerHTML=`Due Date: ${e.dueDate}`,o.innerHTML=`Priority: ${e.priority}`,d.innerHTML="X",t.appendChild(n),n.appendChild(r),n.appendChild(a),n.appendChild(o),n.appendChild(d)}))}(e)):g()}(document.getElementById("task-project").value)}));let s=document.createElement("button");return s.textContent="Cancel",s.onclick=g,e.appendChild(t),e.appendChild(n),e.appendChild(r),e.appendChild(a),e.appendChild(o),e.appendChild(d),e.appendChild(i),e.appendChild(c),e.appendChild(l),e.appendChild(s),e}();P.appendChild(e),e.style.display="block"};let B=1,k=[{id:1,projectId:1,title:"Vacuum the living room",dueDate:"2023-09-15",priority:"Medium"},{id:2,projectId:1,title:"Wash dishes",dueDate:"2023-09-16",priority:"Low"}];function I(e){let t=document.querySelector(".task-container"),n=k.filter((t=>t.projectId===parseInt(e)));for(;t.firstChild;)t.removeChild(t.firstChild);n.forEach((e=>{let n=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div"),d=document.createElement("div");n.classList.add("task-card"),r.classList.add("task-title"),a.classList.add("task-due-date"),o.classList.add("task-priority"),d.classList.add("task-delete-button"),r.innerHTML=`Task: ${e.title}`,a.innerHTML=`Due Date: ${e.dueDate}`,o.innerHTML=`Priority: ${e.priority}`,d.innerHTML="X",e.id=B++,n.dataset.taskId=e.id,d.addEventListener("click",(()=>{console.log(`click ${e.id}`),y(e.id)})),t.appendChild(n),n.appendChild(r),n.appendChild(a),n.appendChild(o),n.appendChild(d)}))}function v(e,t,n,r,a){this.id=e,this.projectId=t,this.title=n,this.dueDate=r,this.priority=a}function y(e){k=k.filter((t=>t.id!==e)),function(e){let t=document.querySelector(".task-container"),n=t.querySelector(`[data-task-id="${e}"]`);n&&t.removeChild(n)}(e)}let E=document.getElementById("content"),j=1,L=[{id:1,projectTitle:"Default"}],w=document.createElement("div");w.classList.add("projects");let T=document.createElement("button");function M(){T.disabled=!1;const e=document.querySelector(".project-form");e&&e.remove()}function S(e,t){this.id=e,this.projectTitle=t}function H(){let e=Math.max(...L.map((e=>e.id)),0)+1,t=document.querySelector("#project-title").value,n=new S(e,t);""!==t.trim()?(L.push(n),function(){for(;w.hasChildNodes();)w.removeChild(w.firstChild)}(),L.forEach((e=>{let t=document.createElement("div"),n=document.createElement("div");n.dataset.projectId=e.id,t.classList.add("project-card"),n.classList.add("project-title"),n.innerHTML=e.projectTitle,w.appendChild(t),t.appendChild(n)})),w.addEventListener("click",(e=>{let t=e.target.dataset.projectId;t&&I(t)})),M()):M()}T.classList.add("project-form-button"),T.textContent="Add Project",T.onclick=function(){T.disabled=!0;let e=function(){let e=document.createElement("div");e.classList.add("project-form");let t=document.createElement("label");t.textContent="Project Title:",t.setAttribute("for","project-title");let n=document.createElement("input");n.type="text",n.id="project-title",n.name="project-title";let r=document.createElement("button");r.textContent="Add Project",r.onclick=H;let a=document.createElement("button");return a.textContent="Cancel",a.onclick=M,e.appendChild(t),e.appendChild(n),e.appendChild(r),e.appendChild(a),e}();E.appendChild(e),e.style.display="block"};let D=document.getElementById("content"),q=document.createElement("div");q.classList.add("display-body"),D.appendChild(q);const P=q;!function(){let e=document.createElement("div");e.classList.add("header"),e.innerHTML="2Do2Day",C.appendChild(e)}(),function(){let e=function(){let e=document.createElement("div");return e.classList.add("sidebar"),e.innerHTML="Projects",h.appendChild(e),e}();e.appendChild(T),e.appendChild(w),L.forEach((e=>{let t=document.createElement("div"),n=document.createElement("div");t.classList.add("project-card"),n.classList.add("project-title"),n.innerHTML=e.projectTitle,e.id=j++,t.dataset.projectId=e.id,w.appendChild(t),t.appendChild(n),t.addEventListener("click",(e=>{I(t.dataset.projectId)}))}))}(),P.appendChild(x),P.appendChild(b)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFZLFVBRW5CckgsRUFBUW9FLFlBQVlxSCxFQUN4QixDT0dBQyxHRldlLFdBQ1gsSUFBSUMsRUpyQk8sV0FDWCxJQUFJQSxFQUFVaEksU0FBU1csY0FBYyxPQU1yQyxPQUxBcUgsRUFBUTVFLFVBQVVDLElBQUksV0FDdEIyRSxFQUFRdEUsVUFBWSxXQUVwQixFQUFRakQsWUFBWXVILEdBRWJBLENBQ1gsQ0lha0JDLEdBRWRELEVBQVF2SCxZQUFZMEcsR0FDcEJhLEVBQVF2SCxZQUFZeUcsR0FFcEJ2QyxFQUFXTixTQUFTTyxJQUNoQixJQUFJK0MsRUFBYzNILFNBQVNXLGNBQWMsT0FDckNrRSxFQUFlN0UsU0FBU1csY0FBYyxPQUcxQ2dILEVBQVl2RSxVQUFVQyxJQUFJLGdCQUMxQndCLEVBQWF6QixVQUFVQyxJQUFJLGlCQUczQndCLEVBQWFuQixVQUFZa0IsRUFBUUMsYUFHakNELEVBQVEvSSxHQUFLb0wsSUFDYlUsRUFBWXhCLFFBQVFuQixVQUFZSixFQUFRL0ksR0FFeENxTCxFQUFrQnpHLFlBQVlrSCxHQUM5QkEsRUFBWWxILFlBQVlvRSxHQUV4QjhDLEVBQVk1QyxpQkFBaUIsU0FBVXpFLElBR25Dd0csRUFGa0JhLEVBQVl4QixRQUFRbkIsVUFFZixHQUN6QixHQUlWLENFMUNBa0QsR0xBSSxFQUFZekgsWUFBWTZDLEdBQ3hCLEVBQVk3QyxZQUFZMEMsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2hlYWRlci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3NpZGViYXIuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy90YXNrQ29udGFpbmVyLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvdGFza0Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zaG93VGFza3MuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zaG93UHJvamVjdHMuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9wcm9qZWN0Rm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcbiAgICBtYXJnaW46IDA7XG59XG5cbiNjb250ZW50IHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDZmcjtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA2ZnI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBib3JkZXI6IHNvbGlkIDJweCBibGFjaztcbn1cblxuLmhlYWRlciB7XG4gICAgZ3JpZC1hcmVhOiAxLzEvMi8zO1xuICAgIGJvcmRlcjogc29saWQgMXB4IHJlZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDQwcHg7XG59XG5cbi5kaXNwbGF5LWJvZHkge1xuICAgIGdyaWQtYXJlYTogMi8yLzMvMztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgYm9yZGVyOiBzb2xpZCAxcHggYmx1ZTtcbn1cblxuLnNpZGViYXIge1xuICAgIGdyaWQtYXJlYTogMi8xLzMvMjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgYm9yZGVyOiBzb2xpZCAxcHggZ3JlZW47XG59XG5cbi5wcm9qZWN0LWZvcm0ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgei1pbmRleDogMTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAyMHB4O1xuXG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLnByb2plY3QtZm9ybSBsYWJlbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4ucHJvamVjdC1mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuLnByb2plY3QtZm9ybSB0ZXh0YXJlYSxcbi5wcm9qZWN0LWZvcm0gc2VsZWN0IHtcbiAgICB3aWR0aDogMzUwcHg7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5wcm9qZWN0LWZvcm0gYnV0dG9uIHtcbiAgICBjb2xvcjogcmVkO1xuICAgIG1hcmdpbjogMTBweDtcbn1cblxuLnRhc2stZm9ybSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB6LWluZGV4OiAxO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDIwcHg7XG5cbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4udGFzay1mb3JtIGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG59XG5cbi50YXNrLWZvcm0gaW5wdXRbdHlwZT1cInRleHRcIl0sXG4udGFzay1mb3JtIHRleHRhcmVhLFxuLnRhc2stZm9ybSBzZWxlY3Qge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLnRhc2stZm9ybSBidXR0b24ge1xuICAgIGNvbG9yOiByZWQ7XG4gICAgbWFyZ2luOiAxMHB4O1xufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsMkJBQTJCO0lBQzNCLGFBQWE7SUFDYix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7SUFDaEMsVUFBVTtJQUNWLHVCQUF1QjtJQUN2QixhQUFhOztJQUViLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLHVDQUF1QztBQUMzQzs7QUFFQTtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBOzs7SUFHSSxZQUFZO0lBQ1osYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLFVBQVU7SUFDVix1QkFBdUI7SUFDdkIsYUFBYTs7SUFFYixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQix1Q0FBdUM7QUFDM0M7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTs7O0lBR0ksWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsWUFBWTtBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJib2R5IHtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG4jY29udGVudCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDZmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgNmZyO1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBib3JkZXI6IHNvbGlkIDJweCBibGFjaztcXG59XFxuXFxuLmhlYWRlciB7XFxuICAgIGdyaWQtYXJlYTogMS8xLzIvMztcXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggcmVkO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xcbn1cXG5cXG4uZGlzcGxheS1ib2R5IHtcXG4gICAgZ3JpZC1hcmVhOiAyLzIvMy8zO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xcbiAgICBib3JkZXI6IHNvbGlkIDFweCBibHVlO1xcbn1cXG5cXG4uc2lkZWJhciB7XFxuICAgIGdyaWQtYXJlYTogMi8xLzMvMjtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggZ3JlZW47XFxufVxcblxcbi5wcm9qZWN0LWZvcm0ge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNTAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgcGFkZGluZzogMjBweDtcXG5cXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIG1heC13aWR0aDogNDAwcHg7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG59XFxuXFxuLnByb2plY3QtZm9ybSBsYWJlbCB7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbn1cXG5cXG4ucHJvamVjdC1mb3JtIGlucHV0W3R5cGU9XFxcInRleHRcXFwiXSxcXG4ucHJvamVjdC1mb3JtIHRleHRhcmVhLFxcbi5wcm9qZWN0LWZvcm0gc2VsZWN0IHtcXG4gICAgd2lkdGg6IDM1MHB4O1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLnByb2plY3QtZm9ybSBidXR0b24ge1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICBtYXJnaW46IDEwcHg7XFxufVxcblxcbi50YXNrLWZvcm0ge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNTAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgcGFkZGluZzogMjBweDtcXG5cXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIG1heC13aWR0aDogNDAwcHg7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcXG59XFxuXFxuLnRhc2stZm9ybSBsYWJlbCB7XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xcbn1cXG5cXG4udGFzay1mb3JtIGlucHV0W3R5cGU9XFxcInRleHRcXFwiXSxcXG4udGFzay1mb3JtIHRleHRhcmVhLFxcbi50YXNrLWZvcm0gc2VsZWN0IHtcXG4gICAgd2lkdGg6IDM1MHB4O1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXG59XFxuXFxuLnRhc2stZm9ybSBidXR0b24ge1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICBtYXJnaW46IDEwcHg7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJ1xuXG5sZXQgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50Jyk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZUhlYWRlcigpIHtcbiAgICBsZXQgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoJ2hlYWRlcicpO1xuICAgIGhlYWRlci5pbm5lckhUTUwgPSAnMkRvMkRheSc7XG5cbiAgICBjb250ZW50LmFwcGVuZENoaWxkKGhlYWRlcik7XG59IiwiaW1wb3J0ICcuL3N0eWxlLmNzcydcblxubGV0IGNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTaWRlYmFyKCkge1xuICAgIGxldCBzaWRlYmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2lkZWJhci5jbGFzc0xpc3QuYWRkKCdzaWRlYmFyJyk7XG4gICAgc2lkZWJhci5pbm5lckhUTUwgPSAnUHJvamVjdHMnO1xuXG4gICAgY29udGVudC5hcHBlbmRDaGlsZChzaWRlYmFyKTtcblxuICAgIHJldHVybiBzaWRlYmFyO1xufSIsImltcG9ydCAnLi9zdHlsZS5jc3MnXG5pbXBvcnQgZGlzcGxheUJvZHkgZnJvbSAnLi9pbmRleC5qcydcbmltcG9ydCBjcmVhdGVUYXNrRm9ybSBmcm9tICcuL3Rhc2tGb3JtLmpzJztcbmltcG9ydCB7IG15VGFza3MsIHRhc2tJZENvdW50ZXIsIGRlbGV0ZVRhc2sgfSBmcm9tICcuL3Nob3dUYXNrcy5qcyc7XG5cbmxldCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG50YXNrQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Rhc2stY29udGFpbmVyJyk7XG5cbmxldCBhZGRUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG5hZGRUYXNrQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2FkZC10YXNrLWJ1dHRvbicpO1xuYWRkVGFza0J1dHRvbi5pbm5lckhUTUwgPSAnQWRkIE5ldyBUYXNrJztcbmFkZFRhc2tCdXR0b24ub25jbGljayA9IHNob3dUYXNrRm9ybTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlVGFza0NvbnRhaW5lcigpIHtcbiAgICBkaXNwbGF5Qm9keS5hcHBlbmRDaGlsZChhZGRUYXNrQnV0dG9uKTtcbiAgICBkaXNwbGF5Qm9keS5hcHBlbmRDaGlsZCh0YXNrQ29udGFpbmVyKTtcblxuICAgIHJldHVybiB0YXNrQ29udGFpbmVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzYWJsZVRhc2tGb3JtQnV0dG9uKCkge1xuICAgIGFkZFRhc2tCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZVRhc2tGb3JtQnV0dG9uKCkge1xuICAgIGFkZFRhc2tCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIGxldCB0YXNrRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrLWZvcm0nKTtcbiAgICBpZiAodGFza0Zvcm0pIHtcbiAgICAgICAgdGFza0Zvcm0ucmVtb3ZlKCk7XG4gICAgfVxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHNob3dUYXNrRm9ybSgpIHtcbiAgICBkaXNhYmxlVGFza0Zvcm1CdXR0b24oKTtcblxuICAgIGxldCB0YXNrRm9ybSA9IGNyZWF0ZVRhc2tGb3JtKCk7XG4gICAgZGlzcGxheUJvZHkuYXBwZW5kQ2hpbGQodGFza0Zvcm0pO1xuICAgIHRhc2tGb3JtLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyVGFza3MoKSB7XG4gICAgd2hpbGUodGFza0NvbnRhaW5lci5oYXNDaGlsZE5vZGVzKCkpIHtcbiAgICAgICAgdGFza0NvbnRhaW5lci5yZW1vdmVDaGlsZCh0YXNrQ29udGFpbmVyLmZpcnN0Q2hpbGQpXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlVGFza0NvbnRhaW5lcihwcm9qZWN0SWQpIHtcbiAgICBsZXQgdGFza0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrLWNvbnRhaW5lcicpO1xuICAgIGxldCBwcm9qZWN0VGFza3MgPSBteVRhc2tzLmZpbHRlcigodGFzaykgPT4gdGFzay5wcm9qZWN0SWQgPT09IHBhcnNlSW50KHByb2plY3RJZCkpO1xuXG4gICAgcHJvamVjdFRhc2tzLmZvckVhY2goKHRhc2spID0+IHtcbiAgICAgICAgbGV0IHRhc2tDYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGxldCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbGV0IHRhc2tEdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGxldCB0YXNrUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbGV0IHRhc2tEZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblxuICAgICAgICB0YXNrQ2FyZC5jbGFzc0xpc3QuYWRkKCd0YXNrLWNhcmQnKTtcbiAgICAgICAgdGFza1RpdGxlLmNsYXNzTGlzdC5hZGQoJ3Rhc2stdGl0bGUnKTtcbiAgICAgICAgdGFza0R1ZURhdGUuY2xhc3NMaXN0LmFkZCgndGFzay1kdWUtZGF0ZScpO1xuICAgICAgICB0YXNrUHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgndGFzay1wcmlvcml0eScpO1xuICAgICAgICB0YXNrRGVsZXRlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3Rhc2stZGVsZXRlLWJ1dHRvbicpO1xuXG4gICAgICAgIHRhc2suaWQgPSB0YXNrSWRDb3VudGVyKys7XG4gICAgICAgIHRhc2tDYXJkLmRhdGFzZXQudGFza0lkID0gdGFzay5pZDsgXG5cbiAgICAgICAgdGFza0RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBjbGljayAke3Rhc2suaWR9YClcbiAgICAgICAgICAgIGRlbGV0ZVRhc2sodGFzay5pZCk7XG4gICAgICAgIH0pXG5cbiAgICAgICAgdGFza1RpdGxlLmlubmVySFRNTCA9IGBUYXNrOiAke3Rhc2sudGl0bGV9YDtcbiAgICAgICAgdGFza0R1ZURhdGUuaW5uZXJIVE1MID0gYER1ZSBEYXRlOiAke3Rhc2suZHVlRGF0ZX1gO1xuICAgICAgICB0YXNrUHJpb3JpdHkuaW5uZXJIVE1MID0gYFByaW9yaXR5OiAke3Rhc2sucHJpb3JpdHl9YDsgICAgICAgIFxuICAgICAgICB0YXNrRGVsZXRlQnV0dG9uLmlubmVySFRNTCA9ICdYJztcblxuICAgICAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tDYXJkKTtcbiAgICAgICAgdGFza0NhcmQuYXBwZW5kQ2hpbGQodGFza1RpdGxlKTtcbiAgICAgICAgdGFza0NhcmQuYXBwZW5kQ2hpbGQodGFza0R1ZURhdGUpO1xuICAgICAgICB0YXNrQ2FyZC5hcHBlbmRDaGlsZCh0YXNrUHJpb3JpdHkpO1xuICAgICAgICB0YXNrQ2FyZC5hcHBlbmRDaGlsZCh0YXNrRGVsZXRlQnV0dG9uKTtcbiAgICB9KVxufSIsImltcG9ydCAnLi9zdHlsZS5jc3MnXG5pbXBvcnQgeyBlbmFibGVUYXNrRm9ybUJ1dHRvbiB9IGZyb20gJy4vdGFza0NvbnRhaW5lci5qcyc7XG5pbXBvcnQgeyBteVByb2plY3RzIH0gZnJvbSAnLi9zaG93UHJvamVjdHMuanMnO1xuaW1wb3J0IHsgY3JlYXRlVGFzayB9IGZyb20gJy4vc2hvd1Rhc2tzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlVGFza0Zvcm0oKSB7XG4gICAgbGV0IHRhc2tGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGFza0Zvcm0uY2xhc3NMaXN0LmFkZCgndGFzay1mb3JtJyk7XG5cbiAgICBsZXQgdGl0bGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgdGl0bGVMYWJlbC50ZXh0Q29udGVudCA9ICdUaXRsZTonO1xuICAgIHRpdGxlTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAndGFzay10aXRsZScpO1xuICAgIGxldCB0aXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0aXRsZUlucHV0LnR5cGUgPSAndGV4dCc7XG4gICAgdGl0bGVJbnB1dC5pZCA9ICd0YXNrLXRpdGxlJztcbiAgICB0aXRsZUlucHV0Lm5hbWUgPSAndGFzay10aXRsZSc7XG5cbiAgICBsZXQgZHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBkdWVEYXRlTGFiZWwudGV4dENvbnRlbnQgPSAnRHVlIERhdGU6JztcbiAgICBkdWVEYXRlTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAndGFzay1kdWUtZGF0ZScpO1xuICAgIGxldCBkdWVEYXRlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGR1ZURhdGVJbnB1dC50eXBlID0gJ2RhdGUnO1xuICAgIGR1ZURhdGVJbnB1dC5pZCA9ICd0YXNrLWR1ZS1kYXRlJztcbiAgICBkdWVEYXRlSW5wdXQubmFtZSA9ICd0YXNrLWR1ZS1kYXRlJztcblxuICAgIGxldCBwcmlvcml0eUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBwcmlvcml0eUxhYmVsLnRleHRDb250ZW50ID0gJ1ByaW9yaXR5Oic7XG4gICAgcHJpb3JpdHlMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0YXNrLXByaW9yaXR5Jyk7XG4gICAgbGV0IHByaW9yaXR5U2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gICAgcHJpb3JpdHlTZWxlY3QuaWQgPSAndGFzay1wcmlvcml0eSc7XG4gICAgcHJpb3JpdHlTZWxlY3QubmFtZSA9ICd0YXNrLXByaW9yaXR5JztcblxuICAgIGxldCBwcmlvcml0eU9wdGlvbnMgPSBbJ0hpZ2gnLCAnTWVkaXVtJywgJ0xvdyddO1xuXG4gICAgcHJpb3JpdHlPcHRpb25zLmZvckVhY2goKHByaW9yaXR5KSA9PiB7XG4gICAgICAgIGxldCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgb3B0aW9uLnZhbHVlID0gcHJpb3JpdHk7XG4gICAgICAgIG9wdGlvbi50ZXh0Q29udGVudCA9IHByaW9yaXR5O1xuICAgICAgICBwcmlvcml0eVNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xuICAgIH0pO1xuXG4gICAgbGV0IHByb2plY3RMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgcHJvamVjdExhYmVsLnRleHRDb250ZW50ID0gJ1Byb2plY3Q6JztcbiAgICBwcm9qZWN0TGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAndGFzay1wcm9qZWN0Jyk7XG4gICAgbGV0IHByb2plY3RTZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTtcbiAgICBwcm9qZWN0U2VsZWN0LmlkID0gJ3Rhc2stcHJvamVjdCc7XG4gICAgcHJvamVjdFNlbGVjdC5uYW1lID0gJ3Rhc2stcHJvamVjdCc7XG5cbiAgICBteVByb2plY3RzLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICAgICAgbGV0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgICAgICBvcHRpb24udmFsdWUgPSBwcm9qZWN0LmlkO1xuICAgICAgICBvcHRpb24udGV4dENvbnRlbnQgPSBwcm9qZWN0LnByb2plY3RUaXRsZTtcbiAgICAgICAgcHJvamVjdFNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24pO1xuICAgIH0pO1xuXG4gICAgbGV0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGFkZEJ1dHRvbi50ZXh0Q29udGVudCA9ICdBZGQgUHJvamVjdCc7XG4gICAgYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGxldCBwcm9qZWN0U2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stcHJvamVjdCcpO1xuICAgICAgICBsZXQgc2VsZWN0ZWRQcm9qZWN0SWQgPSBwcm9qZWN0U2VsZWN0LnZhbHVlO1xuICAgICAgICBjcmVhdGVUYXNrKHNlbGVjdGVkUHJvamVjdElkKTtcbiAgICB9KTtcblxuICAgIGxldCBjYW5jZWxCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjYW5jZWxCdXR0b24udGV4dENvbnRlbnQgPSAnQ2FuY2VsJztcbiAgICBjYW5jZWxCdXR0b24ub25jbGljayA9IGVuYWJsZVRhc2tGb3JtQnV0dG9uO1xuXG4gICAgdGFza0Zvcm0uYXBwZW5kQ2hpbGQodGl0bGVMYWJlbCk7XG4gICAgdGFza0Zvcm0uYXBwZW5kQ2hpbGQodGl0bGVJbnB1dCk7XG4gICAgdGFza0Zvcm0uYXBwZW5kQ2hpbGQoZHVlRGF0ZUxhYmVsKTtcbiAgICB0YXNrRm9ybS5hcHBlbmRDaGlsZChkdWVEYXRlSW5wdXQpO1xuICAgIHRhc2tGb3JtLmFwcGVuZENoaWxkKHByaW9yaXR5TGFiZWwpO1xuICAgIHRhc2tGb3JtLmFwcGVuZENoaWxkKHByaW9yaXR5U2VsZWN0KTtcbiAgICB0YXNrRm9ybS5hcHBlbmRDaGlsZChwcm9qZWN0TGFiZWwpO1xuICAgIHRhc2tGb3JtLmFwcGVuZENoaWxkKHByb2plY3RTZWxlY3QpO1xuICAgIHRhc2tGb3JtLmFwcGVuZENoaWxkKGFkZEJ1dHRvbik7XG4gICAgdGFza0Zvcm0uYXBwZW5kQ2hpbGQoY2FuY2VsQnV0dG9uKTtcblxuICAgIHJldHVybiB0YXNrRm9ybVxufSIsImltcG9ydCAnLi9zdHlsZS5jc3MnXG5pbXBvcnQgY3JlYXRlVGFza0NvbnRhaW5lciBmcm9tICcuL3Rhc2tDb250YWluZXIuanMnO1xuaW1wb3J0IHsgZW5hYmxlVGFza0Zvcm1CdXR0b24sIGRpc2FibGVUYXNrRm9ybUJ1dHRvbiwgY2xlYXJUYXNrcywgdXBkYXRlVGFza0NvbnRhaW5lciB9IGZyb20gJy4vdGFza0NvbnRhaW5lci5qcyc7XG5pbXBvcnQgeyBjbGVhclByb2plY3RzLCB1cGRhdGVQcm9qZWN0c0NvbnRhaW5lciwgZW5hYmxlUHJvamVjdEZvcm1CdXR0b24gfSBmcm9tICcuL3Nob3dQcm9qZWN0cyc7XG5cbmV4cG9ydCBsZXQgdGFza0lkQ291bnRlciA9IDE7XG5leHBvcnQgbGV0IG15VGFza3MgPSBbXG4gICAge1xuICAgICAgICBpZDogMSxcbiAgICAgICAgcHJvamVjdElkOiAxLFxuICAgICAgICB0aXRsZTogXCJWYWN1dW0gdGhlIGxpdmluZyByb29tXCIsXG4gICAgICAgIGR1ZURhdGU6IFwiMjAyMy0wOS0xNVwiLFxuICAgICAgICBwcmlvcml0eTogXCJNZWRpdW1cIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IDIsXG4gICAgICAgIHByb2plY3RJZDogMSxcbiAgICAgICAgdGl0bGU6IFwiV2FzaCBkaXNoZXNcIixcbiAgICAgICAgZHVlRGF0ZTogXCIyMDIzLTA5LTE2XCIsXG4gICAgICAgIHByaW9yaXR5OiBcIkxvd1wiLFxuICAgIH1cbiAgICAvLyB7XG4gICAgLy8gICAgIGlkOiAzLFxuICAgIC8vICAgICBwcm9qZWN0SWQ6IDIsXG4gICAgLy8gICAgIHRpdGxlOiBcIkZpbmlzaCB0aGUgcmVwb3J0XCIsXG4gICAgLy8gICAgIGR1ZURhdGU6IFwiMjAyMy0wOS0yMFwiLFxuICAgIC8vICAgICBwcmlvcml0eTogXCJIaWdoXCIsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICAgIGlkOiA0LFxuICAgIC8vICAgICBwcm9qZWN0SWQ6IDIsXG4gICAgLy8gICAgIHRpdGxlOiBcIkF0dGVuZCB0aGUgbWVldGluZ1wiLFxuICAgIC8vICAgICBkdWVEYXRlOiBcIjIwMjMtMDktMThcIixcbiAgICAvLyAgICAgcHJpb3JpdHk6IFwiTWVkaXVtXCIsXG4gICAgLy8gfSxcbl07XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hvd1Rhc2tzKCkge1xuICAgIGxldCB0YXNrQ29udGFpbmVyID0gY3JlYXRlVGFza0NvbnRhaW5lcigpO1xuXG4gICAgcmV0dXJuIHRhc2tDb250YWluZXJcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5VGFza3MocHJvamVjdElkKSB7XG4gICAgbGV0IHRhc2tDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFzay1jb250YWluZXInKTtcbiAgICBsZXQgcHJvamVjdFRhc2tzID0gbXlUYXNrcy5maWx0ZXIoKHRhc2spID0+IHRhc2sucHJvamVjdElkID09PSBwYXJzZUludChwcm9qZWN0SWQpKTtcbiAgICBcbiAgICB3aGlsZSAodGFza0NvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgIHRhc2tDb250YWluZXIucmVtb3ZlQ2hpbGQodGFza0NvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBwcm9qZWN0VGFza3MuZm9yRWFjaCgodGFzaykgPT4ge1xuICAgICAgICBsZXQgdGFza0NhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbGV0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBsZXQgdGFza0R1ZURhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgbGV0IHRhc2tQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBsZXQgdGFza0RlbGV0ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gICAgICAgIHRhc2tDYXJkLmNsYXNzTGlzdC5hZGQoJ3Rhc2stY2FyZCcpO1xuICAgICAgICB0YXNrVGl0bGUuY2xhc3NMaXN0LmFkZCgndGFzay10aXRsZScpO1xuICAgICAgICB0YXNrRHVlRGF0ZS5jbGFzc0xpc3QuYWRkKCd0YXNrLWR1ZS1kYXRlJyk7XG4gICAgICAgIHRhc2tQcmlvcml0eS5jbGFzc0xpc3QuYWRkKCd0YXNrLXByaW9yaXR5Jyk7XG4gICAgICAgIHRhc2tEZWxldGVCdXR0b24uY2xhc3NMaXN0LmFkZCgndGFzay1kZWxldGUtYnV0dG9uJyk7XG5cbiAgICAgICAgdGFza1RpdGxlLmlubmVySFRNTCA9IGBUYXNrOiAke3Rhc2sudGl0bGV9YDtcbiAgICAgICAgdGFza0R1ZURhdGUuaW5uZXJIVE1MID0gYER1ZSBEYXRlOiAke3Rhc2suZHVlRGF0ZX1gO1xuICAgICAgICB0YXNrUHJpb3JpdHkuaW5uZXJIVE1MID0gYFByaW9yaXR5OiAke3Rhc2sucHJpb3JpdHl9YDtcbiAgICAgICAgdGFza0RlbGV0ZUJ1dHRvbi5pbm5lckhUTUwgPSAnWCc7XG5cbiAgICAgICAgdGFzay5pZCA9IHRhc2tJZENvdW50ZXIrKztcbiAgICAgICAgdGFza0NhcmQuZGF0YXNldC50YXNrSWQgPSB0YXNrLmlkOyAgICAgICAgXG5cbiAgICAgICAgdGFza0RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBjbGljayAke3Rhc2suaWR9YClcbiAgICAgICAgICAgIGRlbGV0ZVRhc2sodGFzay5pZCk7XG4gICAgICAgIH0pXG5cbiAgICAgICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrQ2FyZCk7XG4gICAgICAgIHRhc2tDYXJkLmFwcGVuZENoaWxkKHRhc2tUaXRsZSk7XG4gICAgICAgIHRhc2tDYXJkLmFwcGVuZENoaWxkKHRhc2tEdWVEYXRlKTtcbiAgICAgICAgdGFza0NhcmQuYXBwZW5kQ2hpbGQodGFza1ByaW9yaXR5KTtcbiAgICAgICAgdGFza0NhcmQuYXBwZW5kQ2hpbGQodGFza0RlbGV0ZUJ1dHRvbik7XG4gICAgfSlcbn07XG5cbmZ1bmN0aW9uIFRhc2soaWQsIHByb2plY3RJZCwgdGl0bGUsIGR1ZURhdGUsIHByaW9yaXR5KSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMucHJvamVjdElkID0gcHJvamVjdElkO1xuICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUYXNrKHByb2plY3RJZCkge1xuICAgIGxldCB0YXNrSWQgPSBNYXRoLm1heCguLi5teVRhc2tzLm1hcCh0YXNrID0+IHRhc2suaWQpLCAwKSArIDE7XG4gICAgbGV0IHRhc2tUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YXNrLXRpdGxlJykudmFsdWU7XG4gICAgbGV0IHRhc2tEdWVEYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2stZHVlLWRhdGUnKS52YWx1ZTtcbiAgICBsZXQgdGFza1ByaW9yaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Rhc2stcHJpb3JpdHknKS52YWx1ZTtcblxuICAgIHByb2plY3RJZCA9IHBhcnNlSW50KHByb2plY3RJZCk7XG5cbiAgICBsZXQgbmV3VGFzayA9IG5ldyBUYXNrKHRhc2tJZCwgcHJvamVjdElkLCB0YXNrVGl0bGUsIHRhc2tEdWVEYXRlLCB0YXNrUHJpb3JpdHkpO1xuXG4gICAgaWYgKHRhc2tUaXRsZS50cmltKCkgPT09IFwiXCIpIHtcbiAgICAgICAgZW5hYmxlVGFza0Zvcm1CdXR0b24oKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG15VGFza3MucHVzaChuZXdUYXNrKTtcbiAgICBjbGVhclRhc2tzKCk7XG4gICAgZW5hYmxlVGFza0Zvcm1CdXR0b24oKTtcbiAgICB1cGRhdGVUYXNrQ29udGFpbmVyKHByb2plY3RJZCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlVGFzayh0YXNrSWQpIHtcbiAgICBteVRhc2tzID0gbXlUYXNrcy5maWx0ZXIodGFzayA9PiB0YXNrLmlkICE9PSB0YXNrSWQpO1xuICAgIHJlbW92ZVRhc2tGcm9tQ29udGFpbmVyKHRhc2tJZCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlVGFza0Zyb21Db250YWluZXIodGFza0lkKSB7XG4gICAgbGV0IHRhc2tDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFzay1jb250YWluZXInKTtcbiAgICBsZXQgdGFza0NhcmQgPSB0YXNrQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLXRhc2staWQ9XCIke3Rhc2tJZH1cIl1gKTtcbiAgICBpZiAodGFza0NhcmQpIHtcbiAgICAgICAgdGFza0NvbnRhaW5lci5yZW1vdmVDaGlsZCh0YXNrQ2FyZCk7XG4gICAgfVxufTsiLCJpbXBvcnQgJy4vc3R5bGUuY3NzJ1xuaW1wb3J0IGNyZWF0ZVNpZGViYXIgZnJvbSAnLi9zaWRlYmFyLmpzJ1xuaW1wb3J0IGNyZWF0ZVByb2plY3RGb3JtIGZyb20gJy4vcHJvamVjdEZvcm0uanMnO1xuaW1wb3J0IHsgZGlzcGxheVRhc2tzIH0gZnJvbSAnLi9zaG93VGFza3MuanMnO1xuXG5sZXQgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb250ZW50Jyk7XG5cbmxldCBwcm9qZWN0SWRDb3VudGVyID0gMTtcbmV4cG9ydCBsZXQgbXlQcm9qZWN0cyA9IFtcbiAgICB7XG4gICAgICAgIGlkOiAxLFxuICAgICAgICBwcm9qZWN0VGl0bGU6IFwiRGVmYXVsdFwiXG4gICAgICAgIC8vIHByb2plY3REZXNjcmlwdGlvbjogXCJEZWZhdWx0IFByb2plY3RzXCJcbiAgICB9XG5dO1xuXG5sZXQgcHJvamVjdHNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbnByb2plY3RzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RzJyk7XG5cbmxldCBwcm9qZWN0Rm9ybUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xucHJvamVjdEZvcm1CdXR0b24uY2xhc3NMaXN0LmFkZCgncHJvamVjdC1mb3JtLWJ1dHRvbicpO1xucHJvamVjdEZvcm1CdXR0b24udGV4dENvbnRlbnQgPSAnQWRkIFByb2plY3QnO1xucHJvamVjdEZvcm1CdXR0b24ub25jbGljayA9IHNob3dQcm9qZWN0Rm9ybTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hvd1Byb2plY3RzKCkge1xuICAgIGxldCBzaWRlYmFyID0gY3JlYXRlU2lkZWJhcigpO1xuXG4gICAgc2lkZWJhci5hcHBlbmRDaGlsZChwcm9qZWN0Rm9ybUJ1dHRvbik7XG4gICAgc2lkZWJhci5hcHBlbmRDaGlsZChwcm9qZWN0c0NvbnRhaW5lcik7XG5cbiAgICBteVByb2plY3RzLmZvckVhY2goKHByb2plY3QpID0+IHtcbiAgICAgICAgbGV0IHByb2plY3RDYXJkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGxldCBwcm9qZWN0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgLy8gbGV0IHByb2plY3REZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBcbiAgICAgICAgcHJvamVjdENhcmQuY2xhc3NMaXN0LmFkZCgncHJvamVjdC1jYXJkJyk7XG4gICAgICAgIHByb2plY3RUaXRsZS5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LXRpdGxlJyk7XG4gICAgICAgIC8vIHByb2plY3REZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LWRlc2NyaXB0aW9uJyk7XG5cbiAgICAgICAgcHJvamVjdFRpdGxlLmlubmVySFRNTCA9IHByb2plY3QucHJvamVjdFRpdGxlO1xuICAgICAgICAvLyBwcm9qZWN0RGVzY3JpcHRpb24uaW5uZXJIVE1MID0gcHJvamVjdC5wcm9qZWN0RGVzY3JpcHRpb247XG4gICAgICAgXG4gICAgICAgIHByb2plY3QuaWQgPSBwcm9qZWN0SWRDb3VudGVyKys7XG4gICAgICAgIHByb2plY3RDYXJkLmRhdGFzZXQucHJvamVjdElkID0gcHJvamVjdC5pZDtcblxuICAgICAgICBwcm9qZWN0c0NvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0Q2FyZCk7XG4gICAgICAgIHByb2plY3RDYXJkLmFwcGVuZENoaWxkKHByb2plY3RUaXRsZSk7XG5cbiAgICAgICAgcHJvamVjdENhcmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvamVjdElkID0gcHJvamVjdENhcmQuZGF0YXNldC5wcm9qZWN0SWQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGRpc3BsYXlUYXNrcyhwcm9qZWN0SWQpO1xuICAgICAgICB9KTtcbiAgICB9KVxuXG4gICAgcmV0dXJuIHByb2plY3RGb3JtQnV0dG9uLCBwcm9qZWN0c0NvbnRhaW5lclxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRpc2FibGVQcm9qZWN0Rm9ybUJ1dHRvbigpIHtcbiAgICBwcm9qZWN0Rm9ybUJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZW5hYmxlUHJvamVjdEZvcm1CdXR0b24oKSB7XG4gICAgcHJvamVjdEZvcm1CdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIGNvbnN0IHByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3QtZm9ybScpO1xuICAgIGlmIChwcm9qZWN0Rm9ybSkge1xuICAgICAgICBwcm9qZWN0Rm9ybS5yZW1vdmUoKTtcbiAgICB9XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gc2hvd1Byb2plY3RGb3JtKCkge1xuICAgIGRpc2FibGVQcm9qZWN0Rm9ybUJ1dHRvbigpO1xuXG4gICAgbGV0IHByb2plY3RGb3JtID0gY3JlYXRlUHJvamVjdEZvcm0oKTtcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHByb2plY3RGb3JtKTtcbiAgICBwcm9qZWN0Rm9ybS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbn07XG5cbmZ1bmN0aW9uIFByb2plY3QoaWQsIHByb2plY3RUaXRsZSkge1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgICB0aGlzLnByb2plY3RUaXRsZSA9IHByb2plY3RUaXRsZTtcbiAgICAvLyB0aGlzLnByb2plY3REZXNjcmlwdGlvbiA9IHByb2plY3REZXNjcmlwdGlvbjtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm9qZWN0KCkge1xuICAgIGxldCBuZXdQcm9qZWN0SWQgPSBNYXRoLm1heCguLi5teVByb2plY3RzLm1hcChwcm9qZWN0ID0+IHByb2plY3QuaWQpLCAwKSArIDE7XG4gICAgbGV0IHByb2plY3RUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LXRpdGxlJykudmFsdWU7XG4gICAgLy8gbGV0IHByb2plY3REZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LWRlc2NyaXB0aW9uJykudmFsdWU7XG4gICAgXG4gICAgbGV0IG5ld1Byb2plY3QgPSBuZXcgUHJvamVjdChuZXdQcm9qZWN0SWQsIHByb2plY3RUaXRsZSk7XG5cbiAgICBpZiAocHJvamVjdFRpdGxlLnRyaW0oKSA9PT0gXCJcIikge1xuICAgICAgICBlbmFibGVQcm9qZWN0Rm9ybUJ1dHRvbigpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbXlQcm9qZWN0cy5wdXNoKG5ld1Byb2plY3QpO1xuICAgIGNsZWFyUHJvamVjdHMoKTtcbiAgICB1cGRhdGVQcm9qZWN0c0NvbnRhaW5lcigpO1xuICAgIGVuYWJsZVByb2plY3RGb3JtQnV0dG9uKCk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlUHJvamVjdHNDb250YWluZXIoKSB7XG4gICAgbXlQcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICAgIGxldCBwcm9qZWN0Q2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBsZXQgcHJvamVjdFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIC8vIGxldCBwcm9qZWN0RGVzY3JpcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgXG4gICAgICAgIHByb2plY3RUaXRsZS5kYXRhc2V0LnByb2plY3RJZCA9IHByb2plY3QuaWQ7XG5cbiAgICAgICAgcHJvamVjdENhcmQuY2xhc3NMaXN0LmFkZCgncHJvamVjdC1jYXJkJyk7XG4gICAgICAgIHByb2plY3RUaXRsZS5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LXRpdGxlJyk7XG4gICAgICAgIC8vIHByb2plY3REZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LWRlc2NyaXB0aW9uJyk7XG5cbiAgICAgICAgcHJvamVjdFRpdGxlLmlubmVySFRNTCA9IHByb2plY3QucHJvamVjdFRpdGxlO1xuICAgICAgICAvLyBwcm9qZWN0RGVzY3JpcHRpb24uaW5uZXJIVE1MID0gcHJvamVjdC5wcm9qZWN0RGVzY3JpcHRpb247XG5cbiAgICAgICAgcHJvamVjdHNDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvamVjdENhcmQpO1xuICAgICAgICBwcm9qZWN0Q2FyZC5hcHBlbmRDaGlsZChwcm9qZWN0VGl0bGUpO1xuICAgIH0pXG5cbiAgICBwcm9qZWN0c0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgIGxldCBwcm9qZWN0SWQgPSBlLnRhcmdldC5kYXRhc2V0LnByb2plY3RJZDtcblxuICAgICAgICBpZihwcm9qZWN0SWQpIHtcbiAgICAgICAgICAgIGRpc3BsYXlUYXNrcyhwcm9qZWN0SWQpO1xuICAgICAgICB9XG4gICAgfSlcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhclByb2plY3RzKCkge1xuICAgIHdoaWxlKHByb2plY3RzQ29udGFpbmVyLmhhc0NoaWxkTm9kZXMoKSkge1xuICAgICAgICBwcm9qZWN0c0NvbnRhaW5lci5yZW1vdmVDaGlsZChwcm9qZWN0c0NvbnRhaW5lci5maXJzdENoaWxkKVxuICAgIH1cbn07XG4iLCJpbXBvcnQgJy4vc3R5bGUuY3NzJ1xuaW1wb3J0IHsgY3JlYXRlUHJvamVjdCwgZW5hYmxlUHJvamVjdEZvcm1CdXR0b24gfSBmcm9tICcuL3Nob3dQcm9qZWN0cyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVByb2plY3RGb3JtKCkge1xuICAgIGxldCBwcm9qZWN0Rm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHByb2plY3RGb3JtLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QtZm9ybScpO1xuXG4gICAgbGV0IHRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHRpdGxlTGFiZWwudGV4dENvbnRlbnQgPSAnUHJvamVjdCBUaXRsZTonO1xuICAgIHRpdGxlTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAncHJvamVjdC10aXRsZScpO1xuICAgIGxldCB0aXRsZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0aXRsZUlucHV0LnR5cGUgPSAndGV4dCc7XG4gICAgdGl0bGVJbnB1dC5pZCA9ICdwcm9qZWN0LXRpdGxlJztcbiAgICB0aXRsZUlucHV0Lm5hbWUgPSAncHJvamVjdC10aXRsZSc7XG5cbiAgICAvLyBsZXQgZGVzY3JpcHRpb25MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgLy8gZGVzY3JpcHRpb25MYWJlbC50ZXh0Q29udGVudCA9ICdEZXNjcmlwdGlvbjonO1xuICAgIC8vIGRlc2NyaXB0aW9uTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAncHJvamVjdC1kZXNjcmlwdGlvbicpO1xuICAgIC8vIGxldCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgICAvLyBkZXNjcmlwdGlvbklucHV0LmlkID0gJ3Byb2plY3QtZGVzY3JpcHRpb24nO1xuICAgIC8vIGRlc2NyaXB0aW9uSW5wdXQubmFtZSA9ICdwcm9qZWN0LWRlc2NyaXB0aW9uJztcblxuICAgIGxldCBhZGRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBhZGRCdXR0b24udGV4dENvbnRlbnQgPSAnQWRkIFByb2plY3QnO1xuICAgIGFkZEJ1dHRvbi5vbmNsaWNrID0gY3JlYXRlUHJvamVjdDtcblxuICAgIGxldCBjYW5jZWxCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBjYW5jZWxCdXR0b24udGV4dENvbnRlbnQgPSAnQ2FuY2VsJztcbiAgICBjYW5jZWxCdXR0b24ub25jbGljayA9IGVuYWJsZVByb2plY3RGb3JtQnV0dG9uO1xuXG4gICAgcHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQodGl0bGVMYWJlbCk7XG4gICAgcHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQodGl0bGVJbnB1dCk7XG4gICAgLy8gcHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25MYWJlbCk7XG4gICAgLy8gcHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb25JbnB1dCk7XG4gICAgcHJvamVjdEZvcm0uYXBwZW5kQ2hpbGQoYWRkQnV0dG9uKTtcbiAgICBwcm9qZWN0Rm9ybS5hcHBlbmRDaGlsZChjYW5jZWxCdXR0b24pO1xuXG4gICAgcmV0dXJuIHByb2plY3RGb3JtXG59IiwiaW1wb3J0ICcuL3N0eWxlLmNzcydcbmltcG9ydCBjcmVhdGVIZWFkZXIgZnJvbSBcIi4vaGVhZGVyLmpzXCI7XG5pbXBvcnQgc2hvd1Byb2plY3RzIGZyb20gXCIuL3Nob3dQcm9qZWN0cy5qc1wiO1xuaW1wb3J0IHNob3dUYXNrcyBmcm9tIFwiLi9zaG93VGFza3MuanNcIjtcblxubGV0IGNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29udGVudCcpO1xuXG5sZXQgZGlzcGxheUJvZHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmRpc3BsYXlCb2R5LmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXktYm9keScpO1xuY29udGVudC5hcHBlbmRDaGlsZChkaXNwbGF5Qm9keSk7XG5cbmV4cG9ydCBkZWZhdWx0IGRpc3BsYXlCb2R5O1xuXG5jcmVhdGVIZWFkZXIoKTtcbnNob3dQcm9qZWN0cygpO1xuc2hvd1Rhc2tzKCk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIm5jIiwibG9jYWxzIiwiZ2V0RWxlbWVudEJ5SWQiLCJ0YXNrQ29udGFpbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkVGFza0J1dHRvbiIsImVuYWJsZVRhc2tGb3JtQnV0dG9uIiwiZGlzYWJsZWQiLCJ0YXNrRm9ybSIsImlubmVySFRNTCIsIm9uY2xpY2siLCJ0aXRsZUxhYmVsIiwidGV4dENvbnRlbnQiLCJ0aXRsZUlucHV0IiwidHlwZSIsIm5hbWUiLCJkdWVEYXRlTGFiZWwiLCJkdWVEYXRlSW5wdXQiLCJwcmlvcml0eUxhYmVsIiwicHJpb3JpdHlTZWxlY3QiLCJmb3JFYWNoIiwicHJpb3JpdHkiLCJvcHRpb24iLCJ2YWx1ZSIsInByb2plY3RMYWJlbCIsInByb2plY3RTZWxlY3QiLCJteVByb2plY3RzIiwicHJvamVjdCIsInByb2plY3RUaXRsZSIsImFkZEJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJwcm9qZWN0SWQiLCJ0YXNrSWQiLCJNYXRoIiwibWF4IiwibXlUYXNrcyIsInRhc2siLCJ0YXNrVGl0bGUiLCJ0YXNrRHVlRGF0ZSIsInRhc2tQcmlvcml0eSIsIm5ld1Rhc2siLCJUYXNrIiwicGFyc2VJbnQiLCJ0cmltIiwiaGFzQ2hpbGROb2RlcyIsImNsZWFyVGFza3MiLCJmaWx0ZXIiLCJ0YXNrQ2FyZCIsInRhc2tEZWxldGVCdXR0b24iLCJ0YXNrSWRDb3VudGVyIiwiZGF0YXNldCIsImNvbnNvbGUiLCJsb2ciLCJkZWxldGVUYXNrIiwidGl0bGUiLCJkdWVEYXRlIiwidXBkYXRlVGFza0NvbnRhaW5lciIsImNyZWF0ZVRhc2siLCJjYW5jZWxCdXR0b24iLCJjcmVhdGVUYXNrRm9ybSIsImRpc3BsYXkiLCJkaXNwbGF5VGFza3MiLCJwcm9qZWN0VGFza3MiLCJyZW1vdmVUYXNrRnJvbUNvbnRhaW5lciIsInByb2plY3RJZENvdW50ZXIiLCJwcm9qZWN0c0NvbnRhaW5lciIsInByb2plY3RGb3JtQnV0dG9uIiwiZW5hYmxlUHJvamVjdEZvcm1CdXR0b24iLCJwcm9qZWN0Rm9ybSIsIlByb2plY3QiLCJjcmVhdGVQcm9qZWN0IiwibmV3UHJvamVjdElkIiwibmV3UHJvamVjdCIsImNsZWFyUHJvamVjdHMiLCJwcm9qZWN0Q2FyZCIsImNyZWF0ZVByb2plY3RGb3JtIiwiZGlzcGxheUJvZHkiLCJoZWFkZXIiLCJjcmVhdGVIZWFkZXIiLCJzaWRlYmFyIiwiY3JlYXRlU2lkZWJhciIsInNob3dQcm9qZWN0cyJdLCJzb3VyY2VSb290IjoiIn0=